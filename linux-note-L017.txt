开始时间：2016年04月02日 13:20
第一节

进程概念
进程（processes）就是指现在系统正在执行程序，每当输入一个命令时，shell也会同时启动一个进程。进程防止内存中
每个进程启动时，系统会指定一个唯一的数值给每个进程，数值称为进程（id）或者pid。
每个进程都可能以两种方式存在：前台和后台。
系统的服务都是以后台方式存在，且都会常驻在系统中，直到关机时才结束。
netstat -lnt|grep ssh

linux的定时任务服务 crond(crontab)

crond概念
linux系统中用了定期执行命令或者指定程序任务的一种服务或者软件。
crond是按照分钟计算的，因此秒级别的任务是不能使用的。
kill 进程号 ，结束进程
命令行末尾加$,命令后台运行。
linux的定时任务分为两种
1）是系统自身的定期执行的任务。
	备份系统数据，清除系统缓冲，轮训系统日志（不需干预）
	配置文件在/etc/cron*中。
crontab -l 查看用户的定时任务
2）用户建立的定时任务。

linux的定时任务分类：
1）at适合执行一次就结束的调度任务。突发性的任务。工作中几乎不用。依赖服务atd。
2）anacron适合于非7*24小时开机的服务器准备的。开机执行的。检查停机期间没有执行的任务，在开机后一次性执行一遍。
3）crond，每分钟检测一次系统中是否有需要运行的任务。（主要学习的）
ps：crond是一个定时任务守护进程，而crontab是用来设置定时任务规则的命令的。

crontab 
	-l 查看crontab文件内容，list
	-r 删除crontab文件内容。
	-e 编辑,eidt
	-i 交互式
	-u 用户
编辑的文件在/var/spool/cron/用户名
在/etc/cron.deny
  /etc/cron.allow中可以控制那些用户可以使用crontab的文件，或者不能使用。
用户的定时任务指令的使用格式。
用户的分为6段。系统的分为8段。
每个列（段）之间要有一个空格。

cat /etc/crontab 查看格式
第一段到第五段，分时，日月周。
*    每天就是在天的位置上使用*
-    减号表示分隔符，表示一个时间范围。如第一位上00-10，指0到10分
,    逗号，表示分割时段的意思。如第一位上1,5,16 指1分，5分16分
*/n   n代表数字，即“每隔n单位时间”

	/etc/init.d/crond start (restart ,status,stop)
30 8-18/2 * * * cmd
45 4 1,10,22 * * cmd
10 1 * * 6,0 cmd
0,30 18-23 * * * cmd
00 */1 * * * cmd
* 23,00-07/1 * * * cmd
00 11 * 4 1-3 cmd
周和日尽量不要同时用
00 9 5 5 *
30 9 * * 0

例子：
书写crontab定时任务多个基本要领
例1：每分钟打印一次自己的名字拼音到/server/log自己的名字命名的文件中。
watch 命令
例2:每周六、日 上午9:00和下午14:00来学习（/server/scripts/date.sh).
    脚本是打印当天的日期到一个文件里。
定时任务里要写全路径，不写全路径，是从用户的家目录开始找，不是当前目录。
全路径多用tab，脚本路径多复制。保持最小错误率。
ps：在脚本后一般要加>/dev/null 2>&1
/dev/null 2>&1 等价于 1>/dev/null 2>/dev/null
什么人，什么时间，因为谁（需求方），做了什么事。
ps：在脚本前加/bin/sh 如果脚本忘记加X权限的话，可以保证正常执行。
查看定时任务配置文件的路径：
/var/spool/cron/用户名
crond的日志
/var/log/cron*

每隔2个小时将/etc/service文件打包备份到/tmp下（最好每次备份成不同的备份包）

结束时间：2016年4月2日 16点30分(共3个小时）
